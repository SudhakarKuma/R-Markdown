?for
help(for)for (variable in vector) {
}
??for
?plot
x <- c(1:4, NA, 6:8)
x
x <- c(1:4, NA, 6:8, NA)
x
x[is.na(x)] <- 0
x
cat(sum(is.na(x)), 0, "\n")
is_miss <- is.na(x)
is_miss
x <- c(1:4, NA, 6:8, NA)
is_miss
is_miss <- is.na(x)
is_miss
x[is_miss] <- 0
x
cat(sum(is_miss, 0, "\n"))
cat(sum(is_miss), 0, "\n")
?message
?quantile
?map_lgl
library(purr)
install.packages("purr")
install.packages("purrr")
library(purr)
library(purrr)
remove.packages("purrr", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
?lm
?help(read.table)
args(read.table)
vector("logical", length = 5)
l <- vector("logical", length = 5)
l
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
seq(1,5,2)
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
source('~/Desktop/test.R', echo=TRUE)
myMatrix <- matrix(1:6, nrow = 2, ncol = 3, byrow = TRUE)
print(myMatrix)
myMatrix <- matrix(1:6, nrow = 2, ncol = 3)
print(myMatrix)
print(myMatrix[2,])
print(myMatrix[,2])
print(myMatrix[,c(2:3)])
print(df)
df <- data.frame(name = c("A", "B", "C"),
marks = c(5,8,9))
print(df)
dim(df)
str(df)
df
df[1:2,2] <- NA
df
is.na(df)
df[!complete.cases(df),]
df[complete.cases(df),]
df[complete.cases(df)]
df[complete.cases(df),]
df[!complete.cases(df),]
table(is.na(df))
df
mean(df$marks)
mean(df$marks, na.rm = TRUE)
new_df <- na.omit(df)
print(new_df)
vec <- seq(5,10,0.5)
vec <- seq(5,10,0.5)
for(i in 1:length(vec)){
print(vec[i])
}
copyvec <- vector("numeric", length(vec))
vec <- seq(5,10,0.5)
copyvec <- vector("numeric", length(vec))
for(i in 1:length(vec)){
copyvec[i] <-  vec[i])
}
vec <- seq(5,10,0.5)
copyvec <- vector("numeric", length(vec))
for(i in 1:length(vec)){
copyvec[i] <-  vec[i]
}
copyvec
if(length(copyvec) == length(vec)){
print("Mission accomplished!!")
}
if(length(copyvec) == length(vec)){
print("Mission accomplished!!")
} else{
print("Try again")
}
install.packages("shinydashboard")
shinyApp(ui)
shinyApp()
source('~/ui.R', echo=TRUE)
shiny::runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
?shinyApp
source('~/Desktop/myProject/shiny/ui/app.R', echo=TRUE)
shinyApp(app)
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
runApp('Desktop/myProject/shiny/ui')
dim(iris)
dim(iris3)
iris
2*3
setwd("~/Desktop/myProject/R-Markdown")
library(ggplot2)
load(url(https://stat.duke.edu/~mc301/data/movies.Rdata))
load(url(https://stat.duke.edu/~mc301/data/movies.Rdata))
load(url("https://stat.duke.edu/~mc301/data/movies.Rdata"))
as <- load(url("https://stat.duke.edu/~mc301/data/movies.Rdata"))
View(as)
View(movies)
range(1,2)
?range
which(is.na(movies$runtime))
load(url("https://stat.duke.edu/~mc301/data/movies.Rdata"))
which(is.na(movies$runtime))
View(movies)
